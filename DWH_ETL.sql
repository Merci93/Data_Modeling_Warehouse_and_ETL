/*####################### Source Data ##########################*/
-- Set up table
CREATE TABLE public.sales_data(
	Date				DATE,
	Customer			VARCHAR(10),
    sales_person 		VARCHAR(50),
    customer_age 		INTEGER,
    customer_gender 	CHAR(3),
    state 				VARCHAR(20),
    product_category 	VARCHAR(50),
    sub_category 		VARCHAR(50),
    payment_option 		VARCHAR(10),
    quantity 			INTEGER,
    unit_cost 			FLOAT,
    unit_price 			FLOAT
);

-- Add transaction id
SELECT ROW_NUMBER() OVER(ORDER BY date) AS transaction_id, *
INTO public.sales_data_mod
FROM public.sales_data;

-- Set primary key
ALTER TABLE public.sales_data_mod ADD PRIMARY KEY (transaction_id);

-- Select results
SELECT *
FROM public.sales_data_mod;

/*############################# Staging ############################*/
-- Set up sales table for staging
CREATE TABLE staging.sales_data(
	transaction_id		INTEGER,
	date				DATE,
	Customer			VARCHAR(10),
    sales_person 		VARCHAR(50),
    customer_age 		INTEGER,
    customer_gender 	CHAR(3),
    state 				VARCHAR(20),
    product_category 	VARCHAR(50),
    sub_category 		VARCHAR(50),
    payment_option 		VARCHAR(10),
    quantity 			INTEGER,
    unit_cost 			FLOAT,
    unit_price 			FLOAT,
	PRIMARY KEY (transaction_id)
);

/*########################### Core DWH ###############################*/
-- Create main DWH schema
CREATE SCHEMA sales;

--Set up sales person table
CREATE TABLE sales.sales_person(
	id		INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1),
	name	VARCHAR(20),
	PRIMARY KEY (id)
);

-- Create customer table
CREATE TABLE sales.customers(
	id			INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1),
	customer	VARCHAR(10),
	age 		INTEGER,
	gender		CHAR(3),
	state		VARCHAR(20),
	PRIMARY KEY (id)
);

-- Create payment option table
CREATE TABLE sales.payment(
	id		INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1),
	mode	VARCHAR(10),
	PRIMARY KEY (id)
);

-- Create product table
CREATE TABLE sales.products(
	id				INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1),
	category		VARCHAR(20),
	sub_category	VARCHAR(20),
	PRIMARY KEY (id)
);

-- Create facts table
CREATE TABLE sales.sales_data(
	transaction_id		INTEGER,
	date				DATE,
	sales_person_id		INTEGER,
	customer_id			INTEGER,
	product_id			INTEGER,
	payment_id			INTEGER,
	quantity			INTEGER,
	unit_cost			FLOAT,
	unit_price			FLOAT,
	total_cost			FLOAT,
	total_price			FLOAT,
	profit				FLOAT,
	PRIMARY KEY (transaction_id)
);
